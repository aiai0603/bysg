{"ast":null,"code":"import \"antd/lib/menu/style\";\nimport _Menu from \"antd/lib/menu\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nvar _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\zucc-bysg\\\\web\\\\myapp\\\\src\\\\components\\\\SiderMenu.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\n\nconst renderMenuItem = item =>\n/*#__PURE__*/\n// item.route 菜单单独跳转的路由\nReact.createElement(_Menu.Item, {\n  key: item.key,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Link, {\n  to: (item.route || item.key) + (item.query || ''),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }\n}, item.icon && /*#__PURE__*/React.createElement(_Icon, {\n  type: item.icon,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 27\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"nav-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }\n}, item.title)));\n\nconst renderSubMenu = item => {\n  return /*#__PURE__*/React.createElement(_Menu.SubMenu, {\n    key: item.key,\n    title: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, item.icon && /*#__PURE__*/React.createElement(_Icon, {\n      type: item.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 35\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"nav-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, item.title)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  });\n};\n\nconst SiderMenu = ({\n  menus,\n  ...props\n}) => {\n  const [dragItems, setDragItems] = useState([]);\n  useEffect(() => {\n    setDragItems(menus);\n  }, [menus]);\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  const onDragEnd = result => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    const _items = reorder(dragItems, result.source.index, result.destination.index);\n\n    setDragItems(_items);\n  };\n\n  return /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: \"droppable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: provided.innerRef\n  }, provided.droppableProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }), dragItems.map((item, index) => /*#__PURE__*/React.createElement(Draggable, {\n    key: item.key,\n    draggableId: item.key,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: provided.innerRef\n  }, provided.draggableProps, provided.dragHandleProps, {\n    onDragStart: e => provided.dragHandleProps && provided.dragHandleProps.onDragStart(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(_Menu, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 41\n    }\n  }), item.subs ? renderSubMenu(item) : renderMenuItem(item))))), provided.placeholder)));\n};\n\nexport default React.memo(SiderMenu);","map":{"version":3,"sources":["C:/Users/asus/Desktop/zucc-bysg/web/myapp/src/components/SiderMenu.tsx"],"names":["React","useState","useEffect","Link","DragDropContext","Draggable","Droppable","renderMenuItem","item","key","route","query","icon","title","renderSubMenu","SiderMenu","menus","props","dragItems","setDragItems","reorder","list","startIndex","endIndex","result","Array","from","removed","splice","onDragEnd","destination","_items","source","index","provided","snapshot","innerRef","droppableProps","map","draggableProps","dragHandleProps","e","onDragStart","subs","placeholder","memo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Menu, Icon } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport { IFMenu } from '../routes/config';\r\nimport { MenuProps } from 'antd/lib/menu';\r\n\r\nconst renderMenuItem = (\r\n    item: IFMenu // item.route 菜单单独跳转的路由\r\n) => (\r\n    <Menu.Item key={item.key}>\r\n        <Link to={(item.route || item.key) + (item.query || '')}>\r\n            {item.icon && <Icon type={item.icon} />}\r\n            <span className=\"nav-text\">{item.title}</span>\r\n        </Link>\r\n    </Menu.Item>\r\n);\r\n\r\nconst renderSubMenu = (item: IFMenu) => {\r\n    return (\r\n        <Menu.SubMenu\r\n            key={item.key}\r\n            title={\r\n                <span>\r\n                    {item.icon && <Icon type={item.icon} />}\r\n                    <span className=\"nav-text\">{item.title}</span>\r\n                </span>\r\n            }\r\n        >\r\n          {/*   {item.subs!.map((sub) => (sub.subs ? renderSubMenu(sub) : renderMenuItem(sub)))} */}\r\n        </Menu.SubMenu>\r\n    );\r\n};\r\n\r\ntype SiderMenuProps = MenuProps & {\r\n    menus: any;\r\n    onClick: (e: any) => void;\r\n    selectedKeys: string[];\r\n    openKeys?: string[];\r\n    onOpenChange: (v: string[]) => void;\r\n};\r\n\r\nconst SiderMenu = ({ menus, ...props }: SiderMenuProps) => {\r\n    const [dragItems, setDragItems] = useState<any>([]);\r\n\r\n    useEffect(() => {\r\n        setDragItems(menus);\r\n    }, [menus]);\r\n\r\n    const reorder = (list: any, startIndex: number, endIndex: number) => {\r\n        const result = Array.from(list);\r\n        const [removed] = result.splice(startIndex, 1);\r\n        result.splice(endIndex, 0, removed);\r\n        return result;\r\n    };\r\n    const onDragEnd = (result: any) => {\r\n        // dropped outside the list\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n\r\n        const _items = reorder(dragItems, result.source.index, result.destination.index);\r\n        setDragItems(_items);\r\n    };\r\n    return (\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            <Droppable droppableId=\"droppable\">\r\n                {(provided, snapshot) => (\r\n                    <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                        {dragItems.map((item: IFMenu, index: number) => (\r\n                            <Draggable key={item.key} draggableId={item.key} index={index}>\r\n                                {(provided, snapshot) => (\r\n                                    <div\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.draggableProps}\r\n                                        {...provided.dragHandleProps}\r\n                                        onDragStart={(e: React.DragEvent<any>) =>\r\n                                            provided.dragHandleProps &&\r\n                                            provided.dragHandleProps.onDragStart(e as any)\r\n                                        }\r\n                                    >\r\n                                        <Menu {...props}>\r\n                                            {item.subs!\r\n                                                ? renderSubMenu(item)\r\n                                                : renderMenuItem(item)}\r\n                                        </Menu>\r\n                                    </div>\r\n                                )}\r\n                            </Draggable>\r\n                        ))}\r\n                        {provided.placeholder}\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        </DragDropContext>\r\n    );\r\n};\r\n\r\nexport default React.memo(SiderMenu);\r\n"]},"metadata":{},"sourceType":"module"}