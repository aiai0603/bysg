{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/notification/style\";\nimport _notification from \"antd/lib/notification\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\zucc-bysg\\\\web\\\\myapp\\\\src\\\\components\\\\pages\\\\Login.tsx\";\n\n/**\r\n * Created by hao.cheng on 2017/4/16.\r\n */\nimport React from 'react';\nimport { PwaInstaller } from '../widget';\nimport { connectAlita } from 'redux-alita';\nimport umbrella from 'umbrella-storage';\nimport { post } from '../../service/tools';\nconst FormItem = _Form.Item;\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        const {\n          setAlitaState\n        } = this.props;\n\n        if (!values.userName || !values.password) {\n          return 0;\n        }\n\n        post({\n          url: 'http://localhost:8080/admin/login',\n          data: {\n            username: values.userName,\n            password: values.password\n          }\n        }).then(res => {\n          if (!res) {\n            _notification.open({\n              message: '后台异常'\n            });\n\n            return 0;\n          }\n\n          if (res.rspCode !== '200') {\n            _notification.open({\n              message: res.rspMsg\n            });\n          } else {\n            setAlitaState({\n              stateName: 'auth',\n              data: res.data\n            });\n\n            _notification.open({\n              message: res.rspMsg\n            });\n\n            this.props.history.push('/');\n          }\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      setAlitaState\n    } = this.props;\n    setAlitaState({\n      stateName: 'auth',\n      data: null\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    // React 16.3+弃用componentWillReceiveProps\n    const {\n      auth: nextAuth = {},\n      history\n    } = this.props; // const { history } = this.props;\n\n    if (nextAuth.data) {\n      // 判断是否登陆\n      umbrella.setLocalStorage('user', JSON.stringify(nextAuth.data));\n      history.push('/');\n    }\n  }\n\n  render() {\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, \"\\u7BA1\\u7406\\u7CFB\\u7EDF\"), /*#__PURE__*/React.createElement(PwaInstaller, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(_Form, {\n      onSubmit: this.handleSubmit,\n      style: {\n        maxWidth: '300px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, getFieldDecorator('userName', {\n      rules: [{\n        required: true,\n        message: '请输入用户名!'\n      }]\n    })( /*#__PURE__*/React.createElement(_Input, {\n      prefix: /*#__PURE__*/React.createElement(_Icon, {\n        type: \"user\",\n        style: {\n          fontSize: 13\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 45\n        }\n      }),\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u8D26\\u53F7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(FormItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: '请输入密码!'\n      }]\n    })( /*#__PURE__*/React.createElement(_Input, {\n      prefix: /*#__PURE__*/React.createElement(_Icon, {\n        type: \"lock\",\n        style: {\n          fontSize: 13\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 45\n        }\n      }),\n      type: \"password\",\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(FormItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, \"\\u767B\\u5F55\")))));\n  }\n\n}\n\nexport default connectAlita(['auth'])(_Form.create()(Login));","map":{"version":3,"sources":["C:/Users/asus/Desktop/zucc-bysg/web/myapp/src/components/pages/Login.tsx"],"names":["React","PwaInstaller","connectAlita","umbrella","post","FormItem","Item","Login","Component","handleSubmit","e","preventDefault","props","form","validateFields","err","values","setAlitaState","userName","password","url","data","username","then","res","open","message","rspCode","rspMsg","stateName","history","push","componentDidMount","componentDidUpdate","prevProps","auth","nextAuth","setLocalStorage","JSON","stringify","render","getFieldDecorator","maxWidth","rules","required","fontSize","width","create"],"mappings":"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","sourcesContent":["/**\r\n * Created by hao.cheng on 2017/4/16.\r\n */\r\nimport React from 'react';\r\nimport { Form, Icon, Input, Button, Checkbox, notification } from 'antd';\r\nimport { PwaInstaller } from '../widget';\r\nimport { connectAlita } from 'redux-alita';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { FormProps } from 'antd/lib/form';\r\nimport umbrella from 'umbrella-storage';\r\nimport { post } from '../../service/tools';\r\n\r\nconst FormItem = Form.Item;\r\ntype LoginProps = {\r\n    setAlitaState: (param: any) => void;\r\n    auth: any;\r\n} & RouteComponentProps &\r\n    FormProps;\r\nclass Login extends React.Component<LoginProps> {\r\n    componentDidMount() {\r\n        const { setAlitaState } = this.props;\r\n        setAlitaState({ stateName: 'auth', data: null });\r\n    }\r\n    componentDidUpdate(prevProps: LoginProps) {\r\n        // React 16.3+弃用componentWillReceiveProps\r\n        const { auth: nextAuth = {}, history } = this.props;\r\n        // const { history } = this.props;\r\n        if (nextAuth.data) {\r\n            // 判断是否登陆\r\n            umbrella.setLocalStorage('user', JSON.stringify(nextAuth.data));\r\n            history.push('/');\r\n        }\r\n    }\r\n   \r\n    handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        this.props.form!.validateFields((err, values) => {\r\n            const { setAlitaState } = this.props;\r\n            if (!values.userName || !values.password) {\r\n                return 0;\r\n            }\r\n            post({\r\n                url: 'http://localhost:8080/admin/login',\r\n                data: {\r\n                    username: values.userName,\r\n                    password: values.password,\r\n                },\r\n            }).then((res) => {\r\n                if (!res) {\r\n                    notification.open({\r\n                        message: '后台异常',\r\n                    });\r\n                    return 0;\r\n                }\r\n                if (res.rspCode !== '200') {\r\n                    notification.open({\r\n                        message: res.rspMsg,\r\n                    });\r\n                } else {\r\n                    setAlitaState({ stateName: 'auth' ,data: res.data});\r\n\r\n                    notification.open({\r\n                        message: res.rspMsg,\r\n                    });\r\n\r\n                    this.props.history.push('/');\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form!;\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"login-form\">\r\n                    <div className=\"login-logo\">\r\n                        <span>管理系统</span>\r\n                        <PwaInstaller />\r\n                    </div>\r\n                    <Form onSubmit={this.handleSubmit} style={{ maxWidth: '300px' }}>\r\n                        <FormItem>\r\n                            {getFieldDecorator('userName', {\r\n                                rules: [{ required: true, message: '请输入用户名!' }],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"user\" style={{ fontSize: 13 }} />}\r\n                                    placeholder=\"请输入账号\"\r\n                                />\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {getFieldDecorator('password', {\r\n                                rules: [{ required: true, message: '请输入密码!' }],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"lock\" style={{ fontSize: 13 }} />}\r\n                                    type=\"password\"\r\n                                    placeholder=\"请输入密码\"\r\n                                />\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                className=\"login-form-button\"\r\n                                style={{ width: '100%' }}\r\n                            >\r\n                                登录\r\n                            </Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connectAlita(['auth'])(Form.create()(Login));\r\n"]},"metadata":{},"sourceType":"module"}