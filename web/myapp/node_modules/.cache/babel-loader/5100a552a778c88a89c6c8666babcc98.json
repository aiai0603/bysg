{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nvar _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\zucc-bysg\\\\web\\\\myapp\\\\src\\\\components\\\\SiderCustom.tsx\";\n\n/**\r\n * Created by hao.cheng on 2017/4/13.\r\n */\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport routes from '../routes/config';\nimport routes2 from '../routes/config2';\nimport SiderMenu from './SiderMenu';\nimport { connectAlita } from 'redux-alita';\nimport umbrella from 'umbrella-storage';\nconst {\n  Sider\n} = _Layout;\n\nclass SiderCustom extends Component {\n  constructor(props) {\n    super(props);\n\n    this.recombineOpenKeys = openKeys => {\n      let i = 0;\n      let strPlus = '';\n      let tempKeys = [];\n\n      while (i < openKeys.length) {\n        strPlus += openKeys[i];\n        tempKeys.push(strPlus);\n        i++;\n      }\n\n      return tempKeys;\n    };\n\n    this.menuClick = e => {\n      this.setState({\n        selectedKey: e.key\n      });\n      const {\n        popoverHide\n      } = this.props; // 响应式布局控制小屏幕点击菜单时隐藏菜单操作\n\n      popoverHide && popoverHide();\n    };\n\n    this.openMenu = v => {\n      this.setState({\n        openKeys: v,\n        firstHide: false\n      });\n    };\n\n    this.state = {\n      myMune: [],\n      mode: 'inline',\n      openKeys: [],\n      selectedKey: '',\n      firstHide: false // 点击收缩菜单，第一次隐藏展开子菜单，openMenu时恢复\n\n    };\n  }\n\n  componentDidMount() {\n    if (umbrella.getLocalStorage('user').role === 1) {\n      this.setState({\n        myMune: routes.menus\n      });\n    } else {\n      this.setState({\n        myMune: routes2.menus\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.collapsed !== this.state.collapsed) {\n      const {\n        collapsed\n      } = this.props;\n      this.setState({ ...this.getOpenAndSelectKeys(),\n        collapsed,\n        mode: collapsed ? 'vertical' : 'inline',\n        firstHide: collapsed\n      });\n    }\n\n    if (prevProps.location.pathname !== this.props.location.pathname) {\n      this.setState({ ...this.getOpenAndSelectKeys()\n      });\n    }\n  }\n\n  getOpenAndSelectKeys() {\n    const {\n      location\n    } = this.props;\n    const {\n      pathname\n    } = location;\n    return {\n      openKeys: this.recombineOpenKeys(pathname.match(/[/](\\w+)/gi) || []),\n      selectedKey: pathname\n    };\n  }\n\n  render() {\n    const {\n      selectedKey,\n      openKeys,\n      firstHide,\n      collapsed\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Sider, {\n      trigger: null,\n      breakpoint: \"lg\",\n      collapsed: collapsed,\n      style: {\n        overflowY: 'auto'\n      },\n      className: \"sider-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(SiderMenu, {\n      menus: [...this, state.myMune],\n      onClick: this.menuClick,\n      mode: \"inline\",\n      selectedKeys: [selectedKey],\n      openKeys: firstHide ? [] : openKeys,\n      onOpenChange: this.openMenu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, `\n                    #nprogress .spinner{\n                        left: ${collapsed ? '70px' : '206px'};\n                        right: 0 !important;\n                    }\n                    `));\n  }\n\n}\n\nexport default connectAlita([{\n  smenus: []\n}])(withRouter(SiderCustom));","map":{"version":3,"sources":["C:/Users/asus/Desktop/zucc-bysg/web/myapp/src/components/SiderCustom.tsx"],"names":["React","Component","withRouter","routes","routes2","SiderMenu","connectAlita","umbrella","Sider","SiderCustom","constructor","props","recombineOpenKeys","openKeys","i","strPlus","tempKeys","length","push","menuClick","e","setState","selectedKey","key","popoverHide","openMenu","v","firstHide","state","myMune","mode","componentDidMount","getLocalStorage","role","menus","componentDidUpdate","prevProps","collapsed","getOpenAndSelectKeys","location","pathname","match","render","overflowY","smenus"],"mappings":"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","sourcesContent":["/**\r\n * Created by hao.cheng on 2017/4/13.\r\n */\r\nimport React, { Component } from 'react';\r\nimport { Layout } from 'antd';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport routes from '../routes/config';\r\nimport routes2 from '../routes/config2'\r\nimport SiderMenu from './SiderMenu';\r\nimport { connectAlita } from 'redux-alita';\r\nimport umbrella from 'umbrella-storage';\r\n\r\n\r\nconst { Sider } = Layout;\r\n\r\ntype SiderCustomProps = RouteComponentProps<any> & {\r\n    popoverHide?: () => void;\r\n    collapsed?: boolean;\r\n    smenus?: any;\r\n};\r\ntype SiderCustomState = {\r\n    collapsed?: boolean | undefined;\r\n    openKeys: string[];\r\n    firstHide: boolean | undefined;\r\n    selectedKey: string;\r\n    mode: string;\r\n    myMune:any\r\n};\r\n\r\nclass SiderCustom extends Component<SiderCustomProps, SiderCustomState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            myMune: [],\r\n            mode: 'inline',\r\n            openKeys: [],\r\n            selectedKey: '',\r\n            firstHide: false, // 点击收缩菜单，第一次隐藏展开子菜单，openMenu时恢复\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(umbrella.getLocalStorage('user').role === 1){\r\n            this.setState({\r\n                myMune : routes.menus\r\n            })\r\n              \r\n        }else{\r\n            this.setState({\r\n                myMune : routes2.menus\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps: SiderCustomProps) {\r\n        if (this.props.collapsed !== this.state.collapsed) {\r\n            const { collapsed } = this.props;\r\n            this.setState({\r\n                ...this.getOpenAndSelectKeys(),\r\n                collapsed,\r\n                mode: collapsed ? 'vertical' : 'inline',\r\n                firstHide: collapsed,\r\n            });\r\n        }\r\n        if (prevProps.location.pathname !== this.props.location.pathname) {\r\n            this.setState({ ...this.getOpenAndSelectKeys() });\r\n        }\r\n    }\r\n\r\n    getOpenAndSelectKeys() {\r\n        const { location } = this.props;\r\n        const { pathname } = location;\r\n        return {\r\n            openKeys: this.recombineOpenKeys(pathname.match(/[/](\\w+)/gi) || []),\r\n            selectedKey: pathname,\r\n        };\r\n    }\r\n\r\n    recombineOpenKeys = (openKeys: string[]) => {\r\n        let i = 0;\r\n        let strPlus = '';\r\n        let tempKeys: string[] = [];\r\n        while (i < openKeys.length) {\r\n            strPlus += openKeys[i];\r\n            tempKeys.push(strPlus);\r\n            i++;\r\n        }\r\n        return tempKeys;\r\n    };\r\n\r\n    menuClick = (e: any) => {\r\n        this.setState({\r\n            selectedKey: e.key,\r\n        });\r\n        const { popoverHide } = this.props; // 响应式布局控制小屏幕点击菜单时隐藏菜单操作\r\n        popoverHide && popoverHide();\r\n    };\r\n    openMenu = (v: string[]) => {\r\n        this.setState({\r\n            openKeys: v,\r\n            firstHide: false,\r\n        });\r\n    };\r\n    render() {\r\n        const { selectedKey, openKeys, firstHide, collapsed } = this.state;\r\n        return (\r\n            <Sider\r\n                trigger={null}\r\n                breakpoint=\"lg\"\r\n                collapsed={collapsed}\r\n                style={{ overflowY: 'auto' }}\r\n                className=\"sider-custom\"\r\n            >\r\n                <div className=\"logo\" />\r\n                \r\n                <SiderMenu\r\n                    menus={[...this,state.myMune]}\r\n                    onClick={this.menuClick}\r\n                    mode=\"inline\"\r\n                    selectedKeys={[selectedKey]}\r\n                    openKeys={firstHide ? [] : openKeys}\r\n                    onOpenChange={this.openMenu}\r\n                />\r\n                <style>\r\n                    {`\r\n                    #nprogress .spinner{\r\n                        left: ${collapsed ? '70px' : '206px'};\r\n                        right: 0 !important;\r\n                    }\r\n                    `}\r\n                </style>\r\n            </Sider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connectAlita([{ smenus: [] }])(withRouter(SiderCustom));\r\n"]},"metadata":{},"sourceType":"module"}