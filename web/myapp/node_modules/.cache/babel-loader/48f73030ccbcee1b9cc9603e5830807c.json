{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _ref = require(\"rc-util/lib/ref\");\n\nvar _SearchOutlined = _interopRequireDefault(require(\"@ant-design/icons/SearchOutlined\"));\n\nvar _Input = _interopRequireDefault(require(\"./Input\"));\n\nvar _button = _interopRequireDefault(require(\"../button\"));\n\nvar _SizeContext = _interopRequireDefault(require(\"../config-provider/SizeContext\"));\n\nvar _configProvider = require(\"../config-provider\");\n\nvar _reactNode = require(\"../_util/reactNode\");\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar Search = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var customizePrefixCls = props.prefixCls,\n      customizeInputPrefixCls = props.inputPrefixCls,\n      className = props.className,\n      customizeSize = props.size,\n      suffix = props.suffix,\n      _props$enterButton = props.enterButton,\n      enterButton = _props$enterButton === void 0 ? false : _props$enterButton,\n      addonAfter = props.addonAfter,\n      loading = props.loading,\n      disabled = props.disabled,\n      customOnSearch = props.onSearch,\n      customOnChange = props.onChange,\n      restProps = __rest(props, [\"prefixCls\", \"inputPrefixCls\", \"className\", \"size\", \"suffix\", \"enterButton\", \"addonAfter\", \"loading\", \"disabled\", \"onSearch\", \"onChange\"]);\n\n  var _React$useContext = React.useContext(_configProvider.ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var contextSize = React.useContext(_SizeContext[\"default\"]);\n  var size = customizeSize || contextSize;\n  var inputRef = React.useRef(null);\n\n  var onChange = function onChange(e) {\n    if (e && e.target && e.type === 'click' && customOnSearch) {\n      customOnSearch(e.target.value, e);\n    }\n\n    if (customOnChange) {\n      customOnChange(e);\n    }\n  };\n\n  var onMouseDown = function onMouseDown(e) {\n    var _a;\n\n    if (document.activeElement === ((_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.input)) {\n      e.preventDefault();\n    }\n  };\n\n  var onSearch = function onSearch(e) {\n    var _a;\n\n    if (customOnSearch) {\n      customOnSearch((_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.input.value, e);\n    }\n  };\n\n  var prefixCls = getPrefixCls('input-search', customizePrefixCls);\n  var inputPrefixCls = getPrefixCls('input', customizeInputPrefixCls);\n  var searchIcon = typeof enterButton === 'boolean' ? /*#__PURE__*/React.createElement(_SearchOutlined[\"default\"], null) : null;\n  var btnClassName = \"\".concat(prefixCls, \"-button\");\n  var button;\n  var enterButtonAsElement = enterButton || {};\n  var isAntdButton = enterButtonAsElement.type && enterButtonAsElement.type.__ANT_BUTTON === true;\n\n  if (isAntdButton || enterButtonAsElement.type === 'button') {\n    button = (0, _reactNode.cloneElement)(enterButtonAsElement, (0, _extends2[\"default\"])({\n      onMouseDown: onMouseDown,\n      onClick: function onClick(e) {\n        var _a, _b;\n\n        (_b = (_a = enterButtonAsElement === null || enterButtonAsElement === void 0 ? void 0 : enterButtonAsElement.props) === null || _a === void 0 ? void 0 : _a.onClick) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n        onSearch(e);\n      },\n      key: 'enterButton'\n    }, isAntdButton ? {\n      className: btnClassName,\n      size: size\n    } : {}));\n  } else {\n    button = /*#__PURE__*/React.createElement(_button[\"default\"], {\n      className: btnClassName,\n      type: enterButton ? 'primary' : undefined,\n      size: size,\n      disabled: disabled,\n      key: \"enterButton\",\n      onMouseDown: onMouseDown,\n      onClick: onSearch,\n      loading: loading,\n      icon: searchIcon\n    }, enterButton);\n  }\n\n  if (addonAfter) {\n    button = [button, (0, _reactNode.cloneElement)(addonAfter, {\n      key: 'addonAfter'\n    })];\n  }\n\n  var cls = (0, _classnames[\"default\"])(prefixCls, (_classNames = {}, (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-\").concat(size), !!size), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-with-button\"), !!enterButton), _classNames), className);\n  return /*#__PURE__*/React.createElement(_Input[\"default\"], (0, _extends2[\"default\"])({\n    ref: (0, _ref.composeRef)(inputRef, ref),\n    onPressEnter: onSearch\n  }, restProps, {\n    size: size,\n    prefixCls: inputPrefixCls,\n    addonAfter: button,\n    suffix: suffix,\n    onChange: onChange,\n    className: cls,\n    disabled: disabled\n  }));\n});\nSearch.displayName = 'Search';\nvar _default = Search;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}