{"ast":null,"code":"/////////////////////////////////////////////////////////////////////////////////\n\n/* UAParser.js v0.7.31\n   Copyright Â© 2012-2021 Faisal Salman <f@faisalman.com>\n   MIT License */\n\n/*\nDetect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.\nSupports browser & node.js environment. \nDemo   : https://faisalman.github.io/ua-parser-js\nSource : https://github.com/faisalman/ua-parser-js */\n/////////////////////////////////////////////////////////////////////////////////\n(function (window, undefined) {\n  'use strict'; //////////////\n  // Constants\n  /////////////\n\n  var LIBVERSION = '0.7.31',\n      EMPTY = '',\n      UNKNOWN = '?',\n      FUNC_TYPE = 'function',\n      UNDEF_TYPE = 'undefined',\n      OBJ_TYPE = 'object',\n      STR_TYPE = 'string',\n      MAJOR = 'major',\n      MODEL = 'model',\n      NAME = 'name',\n      TYPE = 'type',\n      VENDOR = 'vendor',\n      VERSION = 'version',\n      ARCHITECTURE = 'architecture',\n      CONSOLE = 'console',\n      MOBILE = 'mobile',\n      TABLET = 'tablet',\n      SMARTTV = 'smarttv',\n      WEARABLE = 'wearable',\n      EMBEDDED = 'embedded',\n      UA_MAX_LENGTH = 255;\n  var AMAZON = 'Amazon',\n      APPLE = 'Apple',\n      ASUS = 'ASUS',\n      BLACKBERRY = 'BlackBerry',\n      BROWSER = 'Browser',\n      CHROME = 'Chrome',\n      EDGE = 'Edge',\n      FIREFOX = 'Firefox',\n      GOOGLE = 'Google',\n      HUAWEI = 'Huawei',\n      LG = 'LG',\n      MICROSOFT = 'Microsoft',\n      MOTOROLA = 'Motorola',\n      OPERA = 'Opera',\n      SAMSUNG = 'Samsung',\n      SONY = 'Sony',\n      XIAOMI = 'Xiaomi',\n      ZEBRA = 'Zebra',\n      FACEBOOK = 'Facebook'; ///////////\n  // Helper\n  //////////\n\n  var extend = function (regexes, extensions) {\n    var mergedRegexes = {};\n\n    for (var i in regexes) {\n      if (extensions[i] && extensions[i].length % 2 === 0) {\n        mergedRegexes[i] = extensions[i].concat(regexes[i]);\n      } else {\n        mergedRegexes[i] = regexes[i];\n      }\n    }\n\n    return mergedRegexes;\n  },\n      enumerize = function (arr) {\n    var enums = {};\n\n    for (var i = 0; i < arr.length; i++) {\n      enums[arr[i].toUpperCase()] = arr[i];\n    }\n\n    return enums;\n  },\n      has = function (str1, str2) {\n    return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;\n  },\n      lowerize = function (str) {\n    return str.toLowerCase();\n  },\n      majorize = function (version) {\n    return typeof version === STR_TYPE ? version.replace(/[^\\d\\.]/g, EMPTY).split('.')[0] : undefined;\n  },\n      trim = function (str, len) {\n    if (typeof str === STR_TYPE) {\n      str = str.replace(/^\\s\\s*/, EMPTY).replace(/\\s\\s*$/, EMPTY);\n      return typeof len === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n    }\n  }; ///////////////\n  // Map helper\n  //////////////\n\n\n  var rgxMapper = function (ua, arrays) {\n    var i = 0,\n        j,\n        k,\n        p,\n        q,\n        matches,\n        match; // loop through all regexes maps\n\n    while (i < arrays.length && !matches) {\n      var regex = arrays[i],\n          // even sequence (0,2,4,..)\n      props = arrays[i + 1]; // odd sequence (1,3,5,..)\n\n      j = k = 0; // try matching uastring with regexes\n\n      while (j < regex.length && !matches) {\n        matches = regex[j++].exec(ua);\n\n        if (!!matches) {\n          for (p = 0; p < props.length; p++) {\n            match = matches[++k];\n            q = props[p]; // check if given property is actually array\n\n            if (typeof q === OBJ_TYPE && q.length > 0) {\n              if (q.length === 2) {\n                if (typeof q[1] == FUNC_TYPE) {\n                  // assign modified match\n                  this[q[0]] = q[1].call(this, match);\n                } else {\n                  // assign given value, ignore regex match\n                  this[q[0]] = q[1];\n                }\n              } else if (q.length === 3) {\n                // check whether function or regex\n                if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                  // call function (usually string mapper)\n                  this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                } else {\n                  // sanitize match using given regex\n                  this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                }\n              } else if (q.length === 4) {\n                this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n              }\n            } else {\n              this[q] = match ? match : undefined;\n            }\n          }\n        }\n      }\n\n      i += 2;\n    }\n  },\n      strMapper = function (str, map) {\n    for (var i in map) {\n      // check if current value is array\n      if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n        for (var j = 0; j < map[i].length; j++) {\n          if (has(map[i][j], str)) {\n            return i === UNKNOWN ? undefined : i;\n          }\n        }\n      } else if (has(map[i], str)) {\n        return i === UNKNOWN ? undefined : i;\n      }\n    }\n\n    return str;\n  }; ///////////////\n  // String map\n  //////////////\n  // Safari < 3.0\n\n\n  var oldSafariMap = {\n    '1.0': '/8',\n    '1.2': '/1',\n    '1.3': '/3',\n    '2.0': '/412',\n    '2.0.2': '/416',\n    '2.0.3': '/417',\n    '2.0.4': '/419',\n    '?': '/'\n  },\n      windowsVersionMap = {\n    'ME': '4.90',\n    'NT 3.11': 'NT3.51',\n    'NT 4.0': 'NT4.0',\n    '2000': 'NT 5.0',\n    'XP': ['NT 5.1', 'NT 5.2'],\n    'Vista': 'NT 6.0',\n    '7': 'NT 6.1',\n    '8': 'NT 6.2',\n    '8.1': 'NT 6.3',\n    '10': ['NT 6.4', 'NT 10.0'],\n    'RT': 'ARM'\n  }; //////////////\n  // Regex map\n  /////////////\n\n  var regexes = {\n    browser: [[/\\b(?:crmo|crios)\\/([\\w\\.]+)/i // Chrome for Android/iOS\n    ], [VERSION, [NAME, 'Chrome']], [/edg(?:e|ios|a)?\\/([\\w\\.]+)/i // Microsoft Edge\n    ], [VERSION, [NAME, 'Edge']], [// Presto based\n    /(opera mini)\\/([-\\w\\.]+)/i, // Opera Mini\n    /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i, // Opera Mobi/Tablet\n    /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i // Opera\n    ], [NAME, VERSION], [/opios[\\/ ]+([\\w\\.]+)/i // Opera mini on iphone >= 8.0\n    ], [VERSION, [NAME, OPERA + ' Mini']], [/\\bopr\\/([\\w\\.]+)/i // Opera Webkit\n    ], [VERSION, [NAME, OPERA]], [// Mixed\n    /(kindle)\\/([\\w\\.]+)/i, // Kindle\n    /(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i, // Lunascape/Maxthon/Netfront/Jasmine/Blazer\n    // Trident based\n    /(avant |iemobile|slim)(?:browser)?[\\/ ]?([\\w\\.]*)/i, // Avant/IEMobile/SlimBrowser\n    /(ba?idubrowser)[\\/ ]?([\\w\\.]+)/i, // Baidu Browser\n    /(?:ms|\\()(ie) ([\\w\\.]+)/i, // Internet Explorer\n    // Webkit/KHTML based                                               // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n    /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale|qqbrowserlite|qq)\\/([-\\w\\.]+)/i, // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ, aka ShouQ\n    /(weibo)__([\\d\\.]+)/i // Weibo\n    ], [NAME, VERSION], [/(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i // UCBrowser\n    ], [VERSION, [NAME, 'UC' + BROWSER]], [/\\bqbcore\\/([\\w\\.]+)/i // WeChat Desktop for Windows Built-in Browser\n    ], [VERSION, [NAME, 'WeChat(Win) Desktop']], [/micromessenger\\/([\\w\\.]+)/i // WeChat\n    ], [VERSION, [NAME, 'WeChat']], [/konqueror\\/([\\w\\.]+)/i // Konqueror\n    ], [VERSION, [NAME, 'Konqueror']], [/trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i // IE11\n    ], [VERSION, [NAME, 'IE']], [/yabrowser\\/([\\w\\.]+)/i // Yandex\n    ], [VERSION, [NAME, 'Yandex']], [/(avast|avg)\\/([\\w\\.]+)/i // Avast/AVG Secure Browser\n    ], [[NAME, /(.+)/, '$1 Secure ' + BROWSER], VERSION], [/\\bfocus\\/([\\w\\.]+)/i // Firefox Focus\n    ], [VERSION, [NAME, FIREFOX + ' Focus']], [/\\bopt\\/([\\w\\.]+)/i // Opera Touch\n    ], [VERSION, [NAME, OPERA + ' Touch']], [/coc_coc\\w+\\/([\\w\\.]+)/i // Coc Coc Browser\n    ], [VERSION, [NAME, 'Coc Coc']], [/dolfin\\/([\\w\\.]+)/i // Dolphin\n    ], [VERSION, [NAME, 'Dolphin']], [/coast\\/([\\w\\.]+)/i // Opera Coast\n    ], [VERSION, [NAME, OPERA + ' Coast']], [/miuibrowser\\/([\\w\\.]+)/i // MIUI Browser\n    ], [VERSION, [NAME, 'MIUI ' + BROWSER]], [/fxios\\/([-\\w\\.]+)/i // Firefox for iOS\n    ], [VERSION, [NAME, FIREFOX]], [/\\bqihu|(qi?ho?o?|360)browser/i // 360\n    ], [[NAME, '360 ' + BROWSER]], [/(oculus|samsung|sailfish)browser\\/([\\w\\.]+)/i], [[NAME, /(.+)/, '$1 ' + BROWSER], VERSION], [// Oculus/Samsung/Sailfish Browser\n    /(comodo_dragon)\\/([\\w\\.]+)/i // Comodo Dragon\n    ], [[NAME, /_/g, ' '], VERSION], [/(electron)\\/([\\w\\.]+) safari/i, // Electron-based App\n    /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i, // Tesla\n    /m?(qqbrowser|baiduboxapp|2345Explorer)[\\/ ]?([\\w\\.]+)/i // QQBrowser/Baidu App/2345 Browser\n    ], [NAME, VERSION], [/(metasr)[\\/ ]?([\\w\\.]+)/i, // SouGouBrowser\n    /(lbbrowser)/i // LieBao Browser\n    ], [NAME], [// WebView\n    /((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i // Facebook App for iOS & Android\n    ], [[NAME, FACEBOOK], VERSION], [/safari (line)\\/([\\w\\.]+)/i, // Line App for iOS\n    /\\b(line)\\/([\\w\\.]+)\\/iab/i, // Line App for Android\n    /(chromium|instagram)[\\/ ]([-\\w\\.]+)/i // Chromium/Instagram\n    ], [NAME, VERSION], [/\\bgsa\\/([\\w\\.]+) .*safari\\//i // Google Search Appliance on iOS\n    ], [VERSION, [NAME, 'GSA']], [/headlesschrome(?:\\/([\\w\\.]+)| )/i // Chrome Headless\n    ], [VERSION, [NAME, CHROME + ' Headless']], [/ wv\\).+(chrome)\\/([\\w\\.]+)/i // Chrome WebView\n    ], [[NAME, CHROME + ' WebView'], VERSION], [/droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i // Android Browser\n    ], [VERSION, [NAME, 'Android ' + BROWSER]], [/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i // Chrome/OmniWeb/Arora/Tizen/Nokia\n    ], [NAME, VERSION], [/version\\/([\\w\\.]+) .*mobile\\/\\w+ (safari)/i // Mobile Safari\n    ], [VERSION, [NAME, 'Mobile Safari']], [/version\\/([\\w\\.]+) .*(mobile ?safari|safari)/i // Safari & Safari Mobile\n    ], [VERSION, NAME], [/webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i // Safari < 3.0\n    ], [NAME, [VERSION, strMapper, oldSafariMap]], [/(webkit|khtml)\\/([\\w\\.]+)/i], [NAME, VERSION], [// Gecko based\n    /(navigator|netscape\\d?)\\/([-\\w\\.]+)/i // Netscape\n    ], [[NAME, 'Netscape'], VERSION], [/mobile vr; rv:([\\w\\.]+)\\).+firefox/i // Firefox Reality\n    ], [VERSION, [NAME, FIREFOX + ' Reality']], [/ekiohf.+(flow)\\/([\\w\\.]+)/i, // Flow\n    /(swiftfox)/i, // Swiftfox\n    /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i, // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror/Klar\n    /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i, // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n    /(firefox)\\/([\\w\\.]+)/i, // Other Firefox-based\n    /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i, // Mozilla\n    // Other\n    /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i, // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir/Obigo/Mosaic/Go/ICE/UP.Browser\n    /(links) \\(([\\w\\.]+)/i // Links\n    ], [NAME, VERSION]],\n    cpu: [[/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i // AMD64 (x64)\n    ], [[ARCHITECTURE, 'amd64']], [/(ia32(?=;))/i // IA32 (quicktime)\n    ], [[ARCHITECTURE, lowerize]], [/((?:i[346]|x)86)[;\\)]/i // IA32 (x86)\n    ], [[ARCHITECTURE, 'ia32']], [/\\b(aarch64|arm(v?8e?l?|_?64))\\b/i // ARM64\n    ], [[ARCHITECTURE, 'arm64']], [/\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i // ARMHF\n    ], [[ARCHITECTURE, 'armhf']], [// PocketPC mistakenly identified as PowerPC\n    /windows (ce|mobile); ppc;/i], [[ARCHITECTURE, 'arm']], [/((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i // PowerPC\n    ], [[ARCHITECTURE, /ower/, EMPTY, lowerize]], [/(sun4\\w)[;\\)]/i // SPARC\n    ], [[ARCHITECTURE, 'sparc']], [/((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n    ], [[ARCHITECTURE, lowerize]]],\n    device: [[//////////////////////////\n    // MOBILES & TABLETS\n    // Ordered by popularity\n    /////////////////////////\n    // Samsung\n    /\\b(sch-i[89]0\\d|shw-m380s|sm-[pt]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i], [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]], [/\\b((?:s[cgp]h|gt|sm)-\\w+|galaxy nexus)/i, /samsung[- ]([-\\w]+)/i, /sec-(sgh\\w+)/i], [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]], [// Apple\n    /\\((ip(?:hone|od)[\\w ]*);/i // iPod/iPhone\n    ], [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]], [/\\((ipad);[-\\w\\),; ]+apple/i, // iPad\n    /applecoremedia\\/[\\w\\.]+ \\((ipad)/i, /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i], [MODEL, [VENDOR, APPLE], [TYPE, TABLET]], [// Huawei\n    /\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i], [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]], [/(?:huawei|honor)([-\\w ]+)[;\\)]/i, /\\b(nexus 6p|\\w{2,4}-[atu]?[ln][01259x][012359][an]?)\\b(?!.+d\\/s)/i], [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]], [// Xiaomi\n    /\\b(poco[\\w ]+)(?: bui|\\))/i, // Xiaomi POCO\n    /\\b; (\\w+) build\\/hm\\1/i, // Xiaomi Hongmi 'numeric' models\n    /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i, // Xiaomi Hongmi\n    /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i, // Xiaomi Redmi\n    /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i // Xiaomi Mi\n    ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, MOBILE]], [/\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i // Mi Pad tablets\n    ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, TABLET]], [// OPPO\n    /; (\\w+) bui.+ oppo/i, /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [// Vivo\n    /vivo (\\w+)(?: bui|\\))/i, /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [// Realme\n    /\\b(rmx[12]\\d{3})(?: bui|;|\\))/i], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [// Motorola\n    /\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i, /\\bmot(?:orola)?[- ](\\w*)/i, /((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i], [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]], [/\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i], [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]], [// LG\n    /((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i], [MODEL, [VENDOR, LG], [TYPE, TABLET]], [/(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i, /\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i, /\\blg-?([\\d\\w]+) bui/i], [MODEL, [VENDOR, LG], [TYPE, MOBILE]], [// Lenovo\n    /(ideatab[-\\w ]+)/i, /lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [// Nokia\n    /(?:maemo|nokia).*(n900|lumia \\d+)/i, /nokia[-_ ]?([-\\w\\.]*)/i], [[MODEL, /_/g, ' '], [VENDOR, 'Nokia'], [TYPE, MOBILE]], [// Google\n    /(pixel c)\\b/i // Google Pixel C\n    ], [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]], [/droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i // Google Pixel\n    ], [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]], [// Sony\n    /droid.+ ([c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i], [MODEL, [VENDOR, SONY], [TYPE, MOBILE]], [/sony tablet [ps]/i, /\\b(?:sony)?sgp\\w+(?: bui|\\))/i], [[MODEL, 'Xperia Tablet'], [VENDOR, SONY], [TYPE, TABLET]], [// OnePlus\n    / (kb2005|in20[12]5|be20[12][59])\\b/i, /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [// Amazon\n    /(alexa)webm/i, /(kf[a-z]{2}wi)( bui|\\))/i, // Kindle Fire without Silk\n    /(kf[a-z]+)( bui|\\)).+silk\\//i // Kindle Fire HD\n    ], [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]], [/((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i // Fire Phone\n    ], [[MODEL, /(.+)/g, 'Fire Phone $1'], [VENDOR, AMAZON], [TYPE, MOBILE]], [// BlackBerry\n    /(playbook);[-\\w\\),; ]+(rim)/i // BlackBerry PlayBook\n    ], [MODEL, VENDOR, [TYPE, TABLET]], [/\\b((?:bb[a-f]|st[hv])100-\\d)/i, /\\(bb10; (\\w+)/i // BlackBerry 10\n    ], [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]], [// Asus\n    /(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i], [MODEL, [VENDOR, ASUS], [TYPE, TABLET]], [/ (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i], [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]], [// HTC\n    /(nexus 9)/i // HTC Nexus 9\n    ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [/(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i, // HTC\n    // ZTE\n    /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i, /(alcatel|geeksphone|nexian|panasonic|sony)[-_ ]?([-\\w]*)/i // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n    ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [// Acer\n    /droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [// Meizu\n    /droid.+; (m[1-5] note) bui/i, /\\bmz-([-\\w]{2,})/i], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [// Sharp\n    /\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i], [MODEL, [VENDOR, 'Sharp'], [TYPE, MOBILE]], [// MIXED\n    /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[-_ ]?([-\\w]*)/i, // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron\n    /(hp) ([\\w ]+\\w)/i, // HP iPAQ\n    /(asus)-?(\\w+)/i, // Asus\n    /(microsoft); (lumia[\\w ]+)/i, // Microsoft Lumia\n    /(lenovo)[-_ ]?([-\\w]+)/i, // Lenovo\n    /(jolla)/i, // Jolla\n    /(oppo) ?([\\w ]+) bui/i // OPPO\n    ], [VENDOR, MODEL, [TYPE, MOBILE]], [/(archos) (gamepad2?)/i, // Archos\n    /(hp).+(touchpad(?!.+tablet)|tablet)/i, // HP TouchPad\n    /(kindle)\\/([\\w\\.]+)/i, // Kindle\n    /(nook)[\\w ]+build\\/(\\w+)/i, // Nook\n    /(dell) (strea[kpr\\d ]*[\\dko])/i, // Dell Streak\n    /(le[- ]+pan)[- ]+(\\w{1,9}) bui/i, // Le Pan Tablets\n    /(trinity)[- ]*(t\\d{3}) bui/i, // Trinity Tablets\n    /(gigaset)[- ]+(q\\w{1,9}) bui/i, // Gigaset Tablets\n    /(vodafone) ([\\w ]+)(?:\\)| bui)/i // Vodafone\n    ], [VENDOR, MODEL, [TYPE, TABLET]], [/(surface duo)/i // Surface Duo\n    ], [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]], [/droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i // Fairphone\n    ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [/(u304aa)/i // AT&T\n    ], [MODEL, [VENDOR, 'AT&T'], [TYPE, MOBILE]], [/\\bsie-(\\w*)/i // Siemens\n    ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [/\\b(rct\\w+) b/i // RCA Tablets\n    ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [/\\b(venue[\\d ]{2,7}) b/i // Dell Venue Tablets\n    ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [/\\b(q(?:mv|ta)\\w+) b/i // Verizon Tablet\n    ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [/\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i // Barnes & Noble Tablet\n    ], [MODEL, [VENDOR, 'Barnes & Noble'], [TYPE, TABLET]], [/\\b(tm\\d{3}\\w+) b/i], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [/\\b(k88) b/i // ZTE K Series Tablet\n    ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [/\\b(nx\\d{3}j) b/i // ZTE Nubia\n    ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [/\\b(gen\\d{3}) b.+49h/i // Swiss GEN Mobile\n    ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [/\\b(zur\\d{3}) b/i // Swiss ZUR Tablet\n    ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [/\\b((zeki)?tb.*\\b) b/i // Zeki Tablets\n    ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [/\\b([yr]\\d{2}) b/i, /\\b(dragon[- ]+touch |dt)(\\w{5}) b/i // Dragon Touch Tablet\n    ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [/\\b(ns-?\\w{0,9}) b/i // Insignia Tablets\n    ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [/\\b((nxa|next)-?\\w{0,9}) b/i // NextBook Tablets\n    ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [/\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i // Voice Xtreme Phones\n    ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [/\\b(lvtel\\-)?(v1[12]) b/i // LvTel Phones\n    ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [/\\b(ph-1) /i // Essential PH-1\n    ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [/\\b(v(100md|700na|7011|917g).*\\b) b/i // Envizen Tablets\n    ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [/\\b(trio[-\\w\\. ]+) b/i // MachSpeed Tablets\n    ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [/\\btu_(1491) b/i // Rotor Tablets\n    ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [/(shield[\\w ]+) b/i // Nvidia Shield Tablets\n    ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, TABLET]], [/(sprint) (\\w+)/i // Sprint Phones\n    ], [VENDOR, MODEL, [TYPE, MOBILE]], [/(kin\\.[onetw]{3})/i // Microsoft Kin\n    ], [[MODEL, /\\./g, ' '], [VENDOR, MICROSOFT], [TYPE, MOBILE]], [/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i // Zebra\n    ], [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]], [/droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i], [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]], [///////////////////\n    // CONSOLES\n    ///////////////////\n    /(ouya)/i, // Ouya\n    /(nintendo) ([wids3utch]+)/i // Nintendo\n    ], [VENDOR, MODEL, [TYPE, CONSOLE]], [/droid.+; (shield) bui/i // Nvidia\n    ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [/(playstation [345portablevi]+)/i // Playstation\n    ], [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]], [/\\b(xbox(?: one)?(?!; xbox))[\\); ]/i // Microsoft Xbox\n    ], [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]], [///////////////////\n    // SMARTTVS\n    ///////////////////\n    /smart-tv.+(samsung)/i // Samsung\n    ], [VENDOR, [TYPE, SMARTTV]], [/hbbtv.+maple;(\\d+)/i], [[MODEL, /^/, 'SmartTV'], [VENDOR, SAMSUNG], [TYPE, SMARTTV]], [/(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i // LG SmartTV\n    ], [[VENDOR, LG], [TYPE, SMARTTV]], [/(apple) ?tv/i // Apple TV\n    ], [VENDOR, [MODEL, APPLE + ' TV'], [TYPE, SMARTTV]], [/crkey/i // Google Chromecast\n    ], [[MODEL, CHROME + 'cast'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [/droid.+aft(\\w)( bui|\\))/i // Fire TV\n    ], [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]], [/\\(dtv[\\);].+(aquos)/i // Sharp\n    ], [MODEL, [VENDOR, 'Sharp'], [TYPE, SMARTTV]], [/\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i, // Roku\n    /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w ]*; *(\\w[^;]*);([^;]*)/i // HbbTV devices\n    ], [[VENDOR, trim], [MODEL, trim], [TYPE, SMARTTV]], [/\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i // SmartTV from Unidentified Vendors\n    ], [[TYPE, SMARTTV]], [///////////////////\n    // WEARABLES\n    ///////////////////\n    /((pebble))app/i // Pebble\n    ], [VENDOR, MODEL, [TYPE, WEARABLE]], [/droid.+; (glass) \\d/i // Google Glass\n    ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [/droid.+; (wt63?0{2,3})\\)/i], [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]], [/(quest( 2)?)/i // Oculus Quest\n    ], [MODEL, [VENDOR, FACEBOOK], [TYPE, WEARABLE]], [///////////////////\n    // EMBEDDED\n    ///////////////////\n    /(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i // Tesla\n    ], [VENDOR, [TYPE, EMBEDDED]], [////////////////////\n    // MIXED (GENERIC)\n    ///////////////////\n    /droid .+?; ([^;]+?)(?: bui|\\) applew).+? mobile safari/i // Android Phones from Unidentified Vendors\n    ], [MODEL, [TYPE, MOBILE]], [/droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i // Android Tablets from Unidentified Vendors\n    ], [MODEL, [TYPE, TABLET]], [/\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i // Unidentifiable Tablet\n    ], [[TYPE, TABLET]], [/(phone|mobile(?:[;\\/]| safari)|pda(?=.+windows ce))/i // Unidentifiable Mobile\n    ], [[TYPE, MOBILE]], [/(android[-\\w\\. ]{0,9});.+buil/i // Generic Android Device\n    ], [MODEL, [VENDOR, 'Generic']]],\n    engine: [[/windows.+ edge\\/([\\w\\.]+)/i // EdgeHTML\n    ], [VERSION, [NAME, EDGE + 'HTML']], [/webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i // Blink\n    ], [VERSION, [NAME, 'Blink']], [/(presto)\\/([\\w\\.]+)/i, // Presto\n    /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna\n    /ekioh(flow)\\/([\\w\\.]+)/i, // Flow\n    /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i, // KHTML/Tasman/Links\n    /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i // iCab\n    ], [NAME, VERSION], [/rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i // Gecko\n    ], [VERSION, NAME]],\n    os: [[// Windows\n    /microsoft (windows) (vista|xp)/i // Windows (iTunes)\n    ], [NAME, VERSION], [/(windows) nt 6\\.2; (arm)/i, // Windows RT\n    /(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i, // Windows Phone\n    /(windows)[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i], [NAME, [VERSION, strMapper, windowsVersionMap]], [/(win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i], [[NAME, 'Windows'], [VERSION, strMapper, windowsVersionMap]], [// iOS/macOS\n    /ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i, // iOS\n    /cfnetwork\\/.+darwin/i], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [/(mac os x) ?([\\w\\. ]*)/i, /(macintosh|mac_powerpc\\b)(?!.+haiku)/i // Mac OS\n    ], [[NAME, 'Mac OS'], [VERSION, /_/g, '.']], [// Mobile OSes\n    /droid ([\\w\\.]+)\\b.+(android[- ]x86)/i // Android-x86\n    ], [VERSION, NAME], [// Android/WebOS/QNX/Bada/RIM/Maemo/MeeGo/Sailfish OS\n    /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i, /(blackberry)\\w*\\/([\\w\\.]*)/i, // Blackberry\n    /(tizen|kaios)[\\/ ]([\\w\\.]+)/i, // Tizen/KaiOS\n    /\\((series40);/i // Series 40\n    ], [NAME, VERSION], [/\\(bb(10);/i // BlackBerry 10\n    ], [VERSION, [NAME, BLACKBERRY]], [/(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i // Symbian\n    ], [VERSION, [NAME, 'Symbian']], [/mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i // Firefox OS\n    ], [VERSION, [NAME, FIREFOX + ' OS']], [/web0s;.+rt(tv)/i, /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i // WebOS\n    ], [VERSION, [NAME, 'webOS']], [// Google Chromecast\n    /crkey\\/([\\d\\.]+)/i // Google Chromecast\n    ], [VERSION, [NAME, CHROME + 'cast']], [/(cros) [\\w]+ ([\\w\\.]+\\w)/i // Chromium OS\n    ], [[NAME, 'Chromium OS'], VERSION], [// Console\n    /(nintendo|playstation) ([wids345portablevuch]+)/i, // Nintendo/Playstation\n    /(xbox); +xbox ([^\\);]+)/i, // Microsoft Xbox (360, One, X, S, Series X, Series S)\n    // Other\n    /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i, // Joli/Palm\n    /(mint)[\\/\\(\\) ]?(\\w*)/i, // Mint\n    /(mageia|vectorlinux)[; ]/i, // Mageia/VectorLinux\n    /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i, // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire\n    /(hurd|linux) ?([\\w\\.]*)/i, // Hurd/Linux\n    /(gnu) ?([\\w\\.]*)/i, // GNU\n    /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i, // FreeBSD/NetBSD/OpenBSD/PC-BSD/GhostBSD/DragonFly\n    /(haiku) (\\w+)/i // Haiku\n    ], [NAME, VERSION], [/(sunos) ?([\\w\\.\\d]*)/i // Solaris\n    ], [[NAME, 'Solaris'], VERSION], [/((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i, // Solaris\n    /(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i, // AIX\n    /\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux)/i, // BeOS/OS2/AmigaOS/MorphOS/OpenVMS/Fuchsia/HP-UX\n    /(unix) ?([\\w\\.]*)/i // UNIX\n    ], [NAME, VERSION]]\n  }; /////////////////\n  // Constructor\n  ////////////////\n\n  var UAParser = function (ua, extensions) {\n    if (typeof ua === OBJ_TYPE) {\n      extensions = ua;\n      ua = undefined;\n    }\n\n    if (!(this instanceof UAParser)) {\n      return new UAParser(ua, extensions).getResult();\n    }\n\n    var _ua = ua || (typeof window !== UNDEF_TYPE && window.navigator && window.navigator.userAgent ? window.navigator.userAgent : EMPTY);\n\n    var _rgxmap = extensions ? extend(regexes, extensions) : regexes;\n\n    this.getBrowser = function () {\n      var _browser = {};\n      _browser[NAME] = undefined;\n      _browser[VERSION] = undefined;\n      rgxMapper.call(_browser, _ua, _rgxmap.browser);\n      _browser.major = majorize(_browser.version);\n      return _browser;\n    };\n\n    this.getCPU = function () {\n      var _cpu = {};\n      _cpu[ARCHITECTURE] = undefined;\n      rgxMapper.call(_cpu, _ua, _rgxmap.cpu);\n      return _cpu;\n    };\n\n    this.getDevice = function () {\n      var _device = {};\n      _device[VENDOR] = undefined;\n      _device[MODEL] = undefined;\n      _device[TYPE] = undefined;\n      rgxMapper.call(_device, _ua, _rgxmap.device);\n      return _device;\n    };\n\n    this.getEngine = function () {\n      var _engine = {};\n      _engine[NAME] = undefined;\n      _engine[VERSION] = undefined;\n      rgxMapper.call(_engine, _ua, _rgxmap.engine);\n      return _engine;\n    };\n\n    this.getOS = function () {\n      var _os = {};\n      _os[NAME] = undefined;\n      _os[VERSION] = undefined;\n      rgxMapper.call(_os, _ua, _rgxmap.os);\n      return _os;\n    };\n\n    this.getResult = function () {\n      return {\n        ua: this.getUA(),\n        browser: this.getBrowser(),\n        engine: this.getEngine(),\n        os: this.getOS(),\n        device: this.getDevice(),\n        cpu: this.getCPU()\n      };\n    };\n\n    this.getUA = function () {\n      return _ua;\n    };\n\n    this.setUA = function (ua) {\n      _ua = typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH ? trim(ua, UA_MAX_LENGTH) : ua;\n      return this;\n    };\n\n    this.setUA(_ua);\n    return this;\n  };\n\n  UAParser.VERSION = LIBVERSION;\n  UAParser.BROWSER = enumerize([NAME, VERSION, MAJOR]);\n  UAParser.CPU = enumerize([ARCHITECTURE]);\n  UAParser.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);\n  UAParser.ENGINE = UAParser.OS = enumerize([NAME, VERSION]); ///////////\n  // Export\n  //////////\n  // check js environment\n\n  if (typeof exports !== UNDEF_TYPE) {\n    // nodejs env\n    if (typeof module !== UNDEF_TYPE && module.exports) {\n      exports = module.exports = UAParser;\n    }\n\n    exports.UAParser = UAParser;\n  } else {\n    // requirejs env (optional)\n    if (typeof define === FUNC_TYPE && define.amd) {\n      define(function () {\n        return UAParser;\n      });\n    } else if (typeof window !== UNDEF_TYPE) {\n      // browser env\n      window.UAParser = UAParser;\n    }\n  } // jQuery/Zepto specific (optional)\n  // Note:\n  //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n  //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n  //   and we should catch that.\n\n\n  var $ = typeof window !== UNDEF_TYPE && (window.jQuery || window.Zepto);\n\n  if ($ && !$.ua) {\n    var parser = new UAParser();\n    $.ua = parser.getResult();\n\n    $.ua.get = function () {\n      return parser.getUA();\n    };\n\n    $.ua.set = function (ua) {\n      parser.setUA(ua);\n      var result = parser.getResult();\n\n      for (var prop in result) {\n        $.ua[prop] = result[prop];\n      }\n    };\n  }\n})(typeof window === 'object' ? window : this);","map":null,"metadata":{},"sourceType":"script"}