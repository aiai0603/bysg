{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/notification/style\";\nimport _notification from \"antd/lib/notification\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\bysg\\\\web\\\\myapp\\\\src\\\\components\\\\pages\\\\Login.tsx\";\n\n/**\r\n * Created by hao.cheng on 2017/4/16.\r\n */\nimport React from 'react';\nimport { PwaInstaller } from '../widget';\nimport { connectAlita } from 'redux-alita';\nimport umbrella from 'umbrella-storage';\nimport { post } from '../../service/tools';\nconst FormItem = _Form.Item;\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        const {\n          setAlitaState\n        } = this.props;\n\n        if (!values.userName || !values.password) {\n          return 0;\n        }\n\n        post({\n          url: 'http://localhost:8080/admin/login',\n          data: {\n            username: values.userName,\n            password: values.password\n          }\n        }).then(res => {\n          if (!res) {\n            _notification.open({\n              message: \"后台异常\"\n            });\n\n            return 0;\n          }\n\n          if (res.rspCode !== \"200\") {\n            _notification.open({\n              message: res.rspMsg\n            });\n          } else {\n            umbrella.getLocalStorage('user', res.data);\n            let {\n              auth\n            } = this.props;\n\n            _notification.open({\n              message: res.rspMsg\n            });\n\n            auth = \"auth\";\n            this.props.history.push('/');\n          }\n        });\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    // React 16.3+弃用componentWillReceiveProps\n    const {\n      history\n    } = this.props; // const { history } = this.props;\n\n    if (umbrella.getLocalStorage('user')) {\n      history.push('/');\n    }\n  }\n\n  render() {\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, \"\\u7BA1\\u7406\\u7CFB\\u7EDF\"), /*#__PURE__*/React.createElement(PwaInstaller, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(_Form, {\n      onSubmit: this.handleSubmit,\n      style: {\n        maxWidth: '300px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, getFieldDecorator('userName', {\n      rules: [{\n        required: true,\n        message: '请输入用户名!'\n      }]\n    })( /*#__PURE__*/React.createElement(_Input, {\n      prefix: /*#__PURE__*/React.createElement(_Icon, {\n        type: \"user\",\n        style: {\n          fontSize: 13\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 45\n        }\n      }),\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u8D26\\u53F7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(FormItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: '请输入密码!'\n      }]\n    })( /*#__PURE__*/React.createElement(_Input, {\n      prefix: /*#__PURE__*/React.createElement(_Icon, {\n        type: \"lock\",\n        style: {\n          fontSize: 13\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 45\n        }\n      }),\n      type: \"password\",\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(FormItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    }, \"\\u767B\\u5F55\")))));\n  }\n\n}\n\nexport default connectAlita(['auth'])(_Form.create()(Login));","map":{"version":3,"sources":["C:/Users/asus/Desktop/bysg/web/myapp/src/components/pages/Login.tsx"],"names":["React","PwaInstaller","connectAlita","umbrella","post","FormItem","Item","Login","Component","handleSubmit","e","preventDefault","props","form","validateFields","err","values","setAlitaState","userName","password","url","data","username","then","res","open","message","rspCode","rspMsg","getLocalStorage","auth","history","push","componentDidUpdate","prevProps","render","getFieldDecorator","maxWidth","rules","required","fontSize","width","create"],"mappings":"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","sourcesContent":["/**\r\n * Created by hao.cheng on 2017/4/16.\r\n */\r\nimport React from 'react';\r\nimport { Form, Icon, Input, Button, Checkbox,notification } from 'antd';\r\nimport { PwaInstaller } from '../widget';\r\nimport { connectAlita } from 'redux-alita';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { FormProps } from 'antd/lib/form';\r\nimport umbrella from 'umbrella-storage';\r\nimport { get, post } from '../../service/tools';\r\n\r\nconst FormItem = Form.Item;\r\ntype LoginProps = {\r\n    setAlitaState: (param: any) => void;\r\n    auth: any;\r\n} & RouteComponentProps &\r\n    FormProps;\r\nclass Login extends React.Component<LoginProps> {\r\n    \r\n    componentDidUpdate(prevProps: LoginProps) {\r\n        // React 16.3+弃用componentWillReceiveProps\r\n        const { history } = this.props;\r\n        // const { history } = this.props;\r\n        if (umbrella.getLocalStorage('user')) {\r\n     \r\n            \r\n            history.push('/');\r\n        }\r\n    }\r\n    handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        this.props.form!.validateFields((err, values) => {\r\n            const { setAlitaState } = this.props\r\n            if(!values.userName||!values.password){\r\n                return 0;\r\n            }\r\n            post({\r\n                url: 'http://localhost:8080/admin/login',\r\n                data: {\r\n                    username:values.userName,\r\n                    password:values.password\r\n                },\r\n            }).then(res=>{\r\n                if(!res){\r\n                    notification.open({\r\n                        message: \"后台异常\"\r\n                      });\r\n                    return 0 ;\r\n                }\r\n                if(res.rspCode !== \"200\"){\r\n                    notification.open({\r\n                        message: res.rspMsg,\r\n                      });\r\n    \r\n                }else {\r\n                  \r\n                  \r\n                        umbrella.getLocalStorage('user',res.data)\r\n                      \r\n                        let {auth} = this.props\r\n                  \r\n                    notification.open({\r\n                        message: res.rspMsg,\r\n                        \r\n                      });\r\n\r\n                      auth = \"auth\"\r\n                      \r\n\r\n                      this.props.history.push('/')\r\n\r\n                     \r\n    \r\n                }\r\n            })\r\n          \r\n        });\r\n    };\r\n   \r\n    render() {\r\n        const { getFieldDecorator } = this.props.form!;\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"login-form\">\r\n                    <div className=\"login-logo\">\r\n                        <span>管理系统</span>\r\n                        <PwaInstaller />\r\n                    </div>\r\n                    <Form onSubmit={this.handleSubmit} style={{ maxWidth: '300px' }}>\r\n                        <FormItem>\r\n                            {getFieldDecorator('userName', {\r\n                                rules: [{ required: true, message: '请输入用户名!' }],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"user\" style={{ fontSize: 13 }} />}\r\n                                    placeholder=\"请输入账号\"\r\n                                />\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {getFieldDecorator('password', {\r\n                                rules: [{ required: true, message: '请输入密码!' }],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"lock\" style={{ fontSize: 13 }} />}\r\n                                    type=\"password\"\r\n                                    placeholder=\"请输入密码\"\r\n                                />\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem>\r\n                           \r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                className=\"login-form-button\"\r\n                                style={{ width: '100%' }}\r\n                            >\r\n                                登录\r\n                            </Button>\r\n                          \r\n                        </FormItem>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connectAlita(['auth'])(Form.create()(Login));\r\n"]},"metadata":{},"sourceType":"module"}