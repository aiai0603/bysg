{"ast":null,"code":"'use strict';\n\nfunction isJsonString(str) {\n  try {\n    JSON.parse(str);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\nvar storage = function () {\n  function storage() {}\n\n  storage.setStorage = function (storageType, key, value) {\n    key = this.transformKey(key);\n\n    if (typeof value !== 'string') {\n      value = JSON.stringify(value);\n    }\n\n    window[storageType].setItem(key, value);\n  };\n\n  storage.getStorage = function (storageType, key, withoutParse) {\n    var value = window[storageType].getItem(this.transformKey(key));\n    if (!value) return null;\n    if (withoutParse) return value;\n    if (isJsonString(value)) return JSON.parse(value);\n    return value;\n  };\n\n  storage.removeStorage = function (storageType, key) {\n    window[storageType].removeItem(this.transformKey(key));\n  };\n\n  storage.transformKey = function (key) {\n    return this.prefix + \"@\" + key;\n  };\n\n  storage.prefix = location.origin + location.pathname;\n  return storage;\n}();\n\nvar umbrella = function () {\n  function umbrella() {}\n\n  umbrella.config = function (prefix) {\n    storage.prefix = prefix;\n  };\n\n  umbrella.setLocalStorage = function (key, value) {\n    storage.setStorage('localStorage', key, value);\n  };\n\n  umbrella.getLocalStorage = function (key, withoutParse) {\n    return storage.getStorage('localStorage', key, withoutParse);\n  };\n\n  umbrella.removeLocalStorage = function (key) {\n    storage.removeStorage('localStorage', key);\n  };\n\n  umbrella.setSessionStorage = function (key, value) {\n    storage.setStorage('sessionStorage', key, value);\n  };\n\n  umbrella.getSessionStorage = function (key, withoutParse) {\n    return storage.getStorage('sessionStorage', key, withoutParse);\n  };\n\n  umbrella.removeSessionStorage = function (key) {\n    storage.removeStorage('sessionStorage', key);\n  };\n\n  return umbrella;\n}();\n\nmodule.exports = umbrella;","map":null,"metadata":{},"sourceType":"script"}