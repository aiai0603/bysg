{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toArrayChildren } from './utils';\n\nvar Thumb = function (_Component) {\n  _inherits(Thumb, _Component);\n\n  function Thumb() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Thumb);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Thumb.__proto__ || Object.getPrototypeOf(Thumb)).call.apply(_ref, [this].concat(args))), _this), _this.getDefaultThumb = function () {\n      var children = [];\n\n      for (var i = 0; i < _this.props.length; i++) {\n        children.push(React.createElement('span', {\n          key: i\n        }));\n      }\n\n      return children;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Thumb, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          length = _props.length,\n          thumbClick = _props.thumbClick,\n          active = _props.active,\n          defaultBool = _props.defaultBool,\n          component = _props.component,\n          componentProps = _props.componentProps,\n          prefixCls = _props.prefixCls,\n          propsChildren = _props.children,\n          props = _objectWithoutProperties(_props, ['length', 'thumbClick', 'active', 'defaultBool', 'component', 'componentProps', 'prefixCls', 'children']);\n\n      var className = 'banner-anim-thumb';\n      var defaultClass = className + '-default';\n      className = (className + ' ' + (prefixCls || '')).trim();\n      className = !defaultBool ? className : (className + ' ' + defaultClass).trim();\n      var children = defaultBool ? this.getDefaultThumb() : propsChildren;\n\n      if (length && toArrayChildren(children).length !== length) {\n        console.warn('The thumbnail length and the images length different.'); // eslint-disable-line\n      }\n\n      var childToRender = toArrayChildren(children).map(function (item, i) {\n        var itemProps = _extends({}, item.props);\n\n        itemProps.onClick = function (e) {\n          if (e.stopPropagation) {\n            e.stopPropagation();\n          }\n\n          thumbClick(i);\n        };\n\n        itemProps.className = ((itemProps.className || '') + ' ' + (active === i ? 'active' : '')).trim();\n        return React.cloneElement(item, itemProps);\n      });\n\n      var $props = _extends({}, props, componentProps, {\n        className: className\n      });\n\n      return React.createElement(component, $props, childToRender);\n    }\n  }]);\n\n  return Thumb;\n}(Component);\n\nThumb.propTypes = {\n  children: PropTypes.any,\n  style: PropTypes.object,\n  prefixCls: PropTypes.string,\n  component: PropTypes.any,\n  thumbClick: PropTypes.func,\n  defaultBool: PropTypes.bool,\n  length: PropTypes.number,\n  active: PropTypes.number,\n  componentProps: PropTypes.object\n};\nThumb.defaultProps = {\n  component: 'div',\n  componentProps: {},\n  thumbClick: function thumbClick() {}\n};\nThumb.isBannerAnimThumb = true;\nexport default Thumb;","map":null,"metadata":{},"sourceType":"module"}