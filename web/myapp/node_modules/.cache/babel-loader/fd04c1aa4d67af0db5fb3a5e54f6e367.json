{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\zucc-bysg\\\\web\\\\myapp\\\\src\\\\components\\\\forms\\\\HorizontalForm.tsx\";\n\n/**\r\n * Created by hao.cheng on 2017/4/15.\r\n */\nimport React, { Component } from 'react';\nconst FormItem = _Form.Item;\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass HorizontalLoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    // To disabled submit button at the beginning.\n    this.props.form.validateFields();\n  }\n\n  render() {\n    const {\n      getFieldDecorator,\n      getFieldsError,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form; // Only show error after a field is touched.\n\n    const userNameError = isFieldTouched('userName') && getFieldError('userName');\n    const passwordError = isFieldTouched('password') && getFieldError('password');\n    return /*#__PURE__*/React.createElement(_Form, {\n      layout: \"inline\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormItem, {\n      validateStatus: userNameError ? 'error' : '',\n      help: userNameError || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, getFieldDecorator('userName', {\n      rules: [{\n        required: true,\n        message: '请输入用户名!'\n      }]\n    })( /*#__PURE__*/React.createElement(_Input, {\n      prefix: /*#__PURE__*/React.createElement(_Icon, {\n        type: \"user\",\n        style: {\n          fontSize: 13\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 37\n        }\n      }),\n      placeholder: \"\\u7528\\u6237\\u540D\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(FormItem, {\n      validateStatus: passwordError ? 'error' : '',\n      help: passwordError || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: '请输入密码!'\n      }]\n    })( /*#__PURE__*/React.createElement(_Input, {\n      prefix: /*#__PURE__*/React.createElement(_Icon, {\n        type: \"lock\",\n        style: {\n          fontSize: 13\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 37\n        }\n      }),\n      type: \"password\",\n      placeholder: \"\\u5BC6\\u7801\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(FormItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      disabled: hasErrors(getFieldsError()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, \"\\u767B\\u5F55\")));\n  }\n\n}\n\nexport default _Form.create()(HorizontalLoginForm);","map":{"version":3,"sources":["C:/Users/asus/Desktop/zucc-bysg/web/myapp/src/components/forms/HorizontalForm.tsx"],"names":["React","Component","FormItem","Item","hasErrors","fieldsError","Object","keys","some","field","HorizontalLoginForm","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","componentDidMount","render","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","userNameError","passwordError","rules","required","message","fontSize","create"],"mappings":"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","sourcesContent":["/**\r\n * Created by hao.cheng on 2017/4/15.\r\n */\r\nimport React, { Component } from 'react';\r\n\r\nimport { Form, Icon, Input, Button } from 'antd';\r\nimport { FormProps } from 'antd/lib/form';\r\nconst FormItem = Form.Item;\r\n\r\nfunction hasErrors(fieldsError: any) {\r\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\ntype HorizontalLoginFormProps = {} & FormProps;\r\n\r\nclass HorizontalLoginForm extends Component<HorizontalLoginFormProps> {\r\n    componentDidMount() {\r\n        // To disabled submit button at the beginning.\r\n        this.props.form!.validateFields();\r\n    }\r\n    handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        this.props.form!.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    };\r\n    render() {\r\n        const {\r\n            getFieldDecorator,\r\n            getFieldsError,\r\n            getFieldError,\r\n            isFieldTouched,\r\n        } = this.props.form!;\r\n\r\n        // Only show error after a field is touched.\r\n        const userNameError = isFieldTouched('userName') && getFieldError('userName');\r\n        const passwordError = isFieldTouched('password') && getFieldError('password');\r\n        return (\r\n            <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n                <FormItem validateStatus={userNameError ? 'error' : ''} help={userNameError || ''}>\r\n                    {getFieldDecorator('userName', {\r\n                        rules: [{ required: true, message: '请输入用户名!' }],\r\n                    })(\r\n                        <Input\r\n                            prefix={<Icon type=\"user\" style={{ fontSize: 13 }} />}\r\n                            placeholder=\"用户名\"\r\n                        />\r\n                    )}\r\n                </FormItem>\r\n                <FormItem validateStatus={passwordError ? 'error' : ''} help={passwordError || ''}>\r\n                    {getFieldDecorator('password', {\r\n                        rules: [{ required: true, message: '请输入密码!' }],\r\n                    })(\r\n                        <Input\r\n                            prefix={<Icon type=\"lock\" style={{ fontSize: 13 }} />}\r\n                            type=\"password\"\r\n                            placeholder=\"密码\"\r\n                        />\r\n                    )}\r\n                </FormItem>\r\n                <FormItem>\r\n                    <Button type=\"primary\" htmlType=\"submit\" disabled={hasErrors(getFieldsError())}>\r\n                        登录\r\n                    </Button>\r\n                </FormItem>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(HorizontalLoginForm);\r\n"]},"metadata":{},"sourceType":"module"}