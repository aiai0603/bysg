{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nexport function toArrayChildren(children) {\n  var ret = [];\n  React.Children.forEach(children, function (c) {\n    ret.push(c);\n  });\n  return ret;\n}\nexport function dataToArray(vars) {\n  if (!vars && vars !== 0) {\n    return [];\n  }\n\n  if (Array.isArray(vars)) {\n    return vars;\n  }\n\n  return [vars];\n}\nexport function setAnimCompToTagComp(item, i) {\n  if (!item) {\n    return null;\n  }\n\n  var itemProps = item.props;\n\n  if (!itemProps.component) {\n    return item;\n  }\n\n  var props = {};\n  props.key = item.key || i; // dom global attributes\n\n  var domAttrArray = ['accesskey', 'classname', 'contenteditable', 'contextmenu', 'dir', 'draggable', 'dropzone', 'hidden', 'id', 'lang', 'spellcheck', 'style', 'tabindex', 'title'];\n  Object.keys(itemProps).forEach(function (key) {\n    if (domAttrArray.indexOf(key.toLocaleLowerCase()) >= 0 || key.match('data-')) {\n      props[key] = itemProps[key];\n    }\n  });\n  return React.createElement(itemProps.component, props, itemProps.children);\n}\nsetAnimCompToTagComp.propTypes = {\n  key: PropTypes.string\n};\nexport function currentScrollTop() {\n  return window.pageYOffset || document.body.scrollTop || document.documentElement.scrollTop;\n}\nexport function currentScrollLeft() {\n  return window.pageXOffset || document.body.scrollLeft || document.documentElement.scrollLeft;\n}\nexport function windowHeight() {\n  return window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n}\nexport function switchChildren(hideProps, item) {\n  if (!hideProps) {\n    return item;\n  }\n\n  if (item.type.isTweenOne) {\n    return React.cloneElement(item, {\n      reverse: true\n    });\n  }\n\n  return React.cloneElement(item, item.props, null);\n}","map":null,"metadata":{},"sourceType":"module"}